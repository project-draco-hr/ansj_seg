{
  int start=0;
  int end=0;
  char[] chars=gp.chars;
  String str=null;
  char c=0;
  for (int i=startOffe; i < endOffe; i++) {
switch (status(chars[i])) {
case 0:
      if (Character.isHighSurrogate(chars[i]) && (i + 1) < endOffe && Character.isLowSurrogate(chars[i + 1])) {
        str=new String(Arrays.copyOfRange(chars,i,i + 2));
        gp.addTerm(new Term(str,i,TermNatures.NULL));
        i++;
      }
 else {
        gp.addTerm(new Term(String.valueOf(chars[i]),i,TermNatures.NULL));
      }
    break;
case 4:
  start=i;
end=1;
while (++i < endOffe && status(chars[i]) == 4) {
end++;
}
str=WordAlert.alertEnglish(chars,start,end);
gp.addTerm(new Term(str,start,TermNatures.EN));
i--;
break;
case 5:
start=i;
end=1;
while (++i < endOffe && status(chars[i]) == 5) {
end++;
}
str=WordAlert.alertNumber(chars,start,end);
gp.addTerm(new Term(str,start,TermNatures.M));
i--;
break;
default :
start=i;
end=i;
c=chars[start];
while (IN_SYSTEM[c] > 0) {
end++;
if (++i >= endOffe) break;
c=chars[i];
}
if (start == end) {
gp.addTerm(new Term(String.valueOf(c),i,TermNatures.NULL));
continue;
}
gwi.setChars(chars,start,end);
while ((str=gwi.allWords()) != null) {
gp.addTerm(new Term(str,gwi.offe,gwi.getItem()));
}
if (IN_SYSTEM[c] > 0 || status(c) > 3 || Character.isHighSurrogate(chars[i])) {
i-=1;
}
 else {
gp.addTerm(new Term(String.valueOf(c),i,TermNatures.NULL));
}
break;
}
}
}
