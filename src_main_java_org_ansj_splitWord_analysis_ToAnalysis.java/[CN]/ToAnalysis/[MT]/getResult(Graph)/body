{
  Merger merger=new Merger(){
    @Override public List<Term> merger(){
      graph.walkPath();
      if (graph.hasNum) {
        NumRecognition.recognition(graph.terms);
      }
      if (graph.hasPerson && MyStaticValue.isNameRecognition) {
        new AsianPersonRecognition(graph.terms).recognition();
        graph.walkPathByScore();
        AsianPersonRecognition.nameAmbiguity(graph.terms);
        new ForeignPersonRecognition(graph.terms).recognition();
        graph.walkPathByScore();
      }
      if (forests == null) {
        userDefineRecognition(graph,null);
      }
 else {
        for (        Forest forest : forests) {
          if (forest == null)           continue;
          userDefineRecognition(graph,forest);
        }
      }
      return getResult();
    }
    private void userDefineRecognition(    final Graph graph,    Forest forest){
      new UserDefineRecognition(graph.terms,forest).recognition();
      graph.rmLittlePath();
      graph.walkPathByScore();
    }
    private List<Term> getResult(){
      List<Term> result=new ArrayList<Term>();
      int length=graph.terms.length - 1;
      for (int i=0; i < length; i++) {
        if (graph.terms[i] != null) {
          result.add(graph.terms[i]);
        }
      }
      return result;
    }
  }
;
  return merger.merger();
}
