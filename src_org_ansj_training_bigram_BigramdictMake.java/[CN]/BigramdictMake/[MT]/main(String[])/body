{
  BufferedReader reader=IOUtil.getReader("data/bigramdict/bigramdict.dic","UTF-8");
  String temp=null;
  String[] strs=null;
  BigramEntry[][] result=new BigramEntry[423152][0];
  int fromId=0;
  int toId=0;
  int freq=0;
  int length=0;
  BigramEntry to=null;
  while ((temp=reader.readLine()) != null) {
    if (StringUtil.isBlank(temp)) {
      continue;
    }
    strs=temp.split("\t");
    freq=Integer.parseInt(strs[1]);
    strs=strs[0].split("@");
    if ((fromId=InitDictionary.getWordId(strs[0])) <= 0) {
      fromId=0;
    }
    if ((toId=InitDictionary.getWordId(strs[1])) <= 0) {
      toId=-1;
    }
    to=new BigramEntry(toId,freq);
    int index=Arrays.binarySearch(result[fromId],to);
    if (index > -1) {
      continue;
    }
 else {
      length=result[fromId].length;
      result[fromId]=Arrays.copyOf(result[fromId],length + 1);
      result[fromId][length]=to;
      Arrays.sort(result[fromId]);
    }
  }
  TwoWordLibrary.setBigramTables(result);
  Term _from=new Term("??????",0,new TermNatures(TermNature.NULL));
  _from.getTermNatures().id=101617;
  Term _to=new Term("??????",0,new TermNatures(TermNature.NULL));
  _to.getTermNatures().id=136991;
  System.out.println(TwoWordLibrary.getTwoWordFreq(_from,_to));
  IOUtil.WriterObj("data/bigramdict/bigramdict.data",result);
}
