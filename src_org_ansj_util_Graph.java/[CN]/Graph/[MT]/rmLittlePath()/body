{
  int maxTo=-1;
  int subMaxTo=-1;
  Term temp=null;
  Term maxTerm=null;
  boolean flag=false;
  for (int i=0; i < terms.length; i++) {
    if (terms[i] == null)     continue;
    temp=terms[i];
    maxTo=temp.getToValue();
    maxTerm=temp;
    while ((temp=temp.getNext()) != null) {
      if (maxTo < temp.getToValue()) {
        maxTo=temp.getToValue();
        maxTerm=temp;
      }
    }
    if (maxTo - i == 1 || i + 1 == terms.length)     continue;
    flag=false;
    for (int j=i + 1; j < maxTo; j++) {
      temp=terms[j];
      if (temp == null) {
        continue;
      }
      subMaxTo=temp.getToValue();
      while ((temp=temp.getNext()) != null) {
        subMaxTo=Math.max(subMaxTo,temp.getToValue());
      }
      if (maxTo < subMaxTo) {
        flag=true;
        break;
      }
    }
    if (!flag) {
      maxTerm.setNext(null);
      terms[i]=maxTerm;
      for (int j=i + 1; j < maxTo; j++) {
        terms[j]=null;
      }
      i=maxTo - 1;
    }
  }
}
