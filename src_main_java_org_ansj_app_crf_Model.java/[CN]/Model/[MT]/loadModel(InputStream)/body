{
  ObjectInputStream ois=null;
  try {
    ois=new ObjectInputStream(new BufferedInputStream(new GZIPInputStream(modelStream)));
    Model model=new Model(){
      @Override public void writeModel(      String path) throws FileNotFoundException, IOException {
        throw new RuntimeException("you can not to calculate ,this model only use by cut ");
      }
    }
;
    model.template=(Template)ois.readObject();
    model.makeSide(model.template.left,model.template.right);
    int tagNum=model.template.tagNum;
    int featureNum=model.template.ft.length;
    model.smartForest=new SmartForest<double[][]>(0.8);
    model.status=(double[][])ois.readObject();
    double[][] w=null;
    String key=null;
    int b=0;
    int featureCount=ois.readInt();
    for (int i=0; i < featureCount; i++) {
      key=ois.readUTF();
      w=new double[featureNum][0];
      for (int j=0; j < featureNum; j++) {
        while ((b=ois.readByte()) != -1) {
          if (w[j].length == 0) {
            w[j]=new double[tagNum];
          }
          w[j][b]=ois.readFloat();
        }
      }
      model.smartForest.add(key,w);
    }
    return model;
  }
  finally {
    if (ois != null) {
      ois.close();
    }
  }
}
