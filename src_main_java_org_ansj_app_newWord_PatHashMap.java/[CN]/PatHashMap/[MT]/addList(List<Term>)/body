{
  int length=terms.size();
  if (length < 2) {
    return;
  }
  List<Term> all=null;
  for (int i=0; i < length; i++) {
    all=new ArrayList<Term>(length - i);
    for (int j=i; j < length; j++) {
      all.add(terms.get(j));
      if (all.size() > 1) {
        double leftRightEntropy=MathUtil.leftRightEntropy(all);
        allFreq++;
        StringBuilder sb=new StringBuilder();
        for (        Term term : all) {
          sb.append(term.getName());
        }
        String name=sb.toString();
        Node node=hm.get(name);
        if (node == null) {
          node=new Node(name);
          node.score=leftRightEntropy;
          node.freq=1;
          hm.put(name,node);
        }
 else {
          node.score+=leftRightEntropy;
          node.freq+=1;
        }
      }
    }
  }
}
