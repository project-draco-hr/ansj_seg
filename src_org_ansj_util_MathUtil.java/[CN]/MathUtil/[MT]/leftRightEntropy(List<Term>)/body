{
  double score=0;
  NewWordNatureAttr newWordAttr=null;
  Term first=all.get(0);
  int twoWordFreq=TwoWordLibrary.getTwoWordFreq(first.getFrom(),first);
  score-=twoWordFreq;
  int length=all.size() - 1;
  Term end=all.get(all.size() - 1);
  twoWordFreq=TwoWordLibrary.getTwoWordFreq(end,end.getTo());
  score-=twoWordFreq;
  for (int i=0; i < length; i++) {
    score-=TwoWordLibrary.getTwoWordFreq(all.get(i),all.get(i + 1));
  }
  if (score < -3) {
    return 0;
  }
  newWordAttr=first.getTermNatures().newWordAttr;
  score+=getTermScore(newWordAttr,newWordAttr.getB());
  newWordAttr=end.getTermNatures().newWordAttr;
  score+=getTermScore(newWordAttr,newWordAttr.getE());
  double midelScore=0;
  Term term=null;
  for (int i=1; i < length; i++) {
    term=all.get(i);
    newWordAttr=term.getTermNatures().newWordAttr;
    midelScore+=getTermScore(newWordAttr,newWordAttr.getM());
  }
  score+=midelScore / (length);
  return score;
}
